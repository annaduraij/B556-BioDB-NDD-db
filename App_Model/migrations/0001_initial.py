# Generated by Django 5.0.3 on 2024-04-13 20:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=255, unique=True)),
                ('abbreviation', models.CharField(db_column='Abbreviation', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Disease',
                'verbose_name_plural': 'Diseases',
                'db_table': 'Disease',
            },
        ),
        migrations.CreateModel(
            name='EnvironmentalRiskFactor',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Environmental Risk Factor (ERF)',
                'verbose_name_plural': 'Environmental Risk Factors (ERFs)',
                'db_table': 'Environmental_Risk_Factor',
            },
        ),
        migrations.CreateModel(
            name='GeneticRiskFactor',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('snp', models.CharField(db_column='SNP', max_length=255, unique=True)),
                ('gene', models.CharField(db_column='Gene', max_length=255)),
                ('trait', models.CharField(blank=True, db_column='Trait', max_length=255, null=True)),
                ('p_value', models.FloatField(blank=True, db_column='P_Value', null=True)),
            ],
            options={
                'verbose_name': 'Genetic Risk Factor (GRF)',
                'verbose_name_plural': 'Genetic Risk Factors (GRFs)',
                'db_table': 'Genetic_Risk_Factor',
            },
        ),
        migrations.CreateModel(
            name='DiseaseERF',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_DOI', models.CharField(db_column='Source_DOI', max_length=255)),
                ('disease_id', models.ForeignKey(db_column='Disease_ID', on_delete=django.db.models.deletion.CASCADE, to='App_Model.disease')),
                ('erf_id', models.ForeignKey(db_column='ERF_ID', on_delete=django.db.models.deletion.CASCADE, to='App_Model.environmentalriskfactor')),
            ],
            options={
                'verbose_name': 'Disease >-< Environmental Risk Factor (ERF)',
                'verbose_name_plural': 'Diseases >-< Environmental Risk Factors (ERFs)',
                'db_table': 'Disease_ERF',
                'unique_together': {('disease_id', 'erf_id')},
            },
        ),
        migrations.AddField(
            model_name='disease',
            name='erfs',
            field=models.ManyToManyField(related_name='diseases', through='App_Model.DiseaseERF', to='App_Model.environmentalriskfactor'),
        ),
        migrations.CreateModel(
            name='DiseaseGRF',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_accession', models.CharField(db_column='Source_Accession', max_length=255)),
                ('disease_id', models.ForeignKey(db_column='Disease_ID', on_delete=django.db.models.deletion.CASCADE, to='App_Model.disease')),
                ('grf_id', models.ForeignKey(db_column='GRF_ID', on_delete=django.db.models.deletion.CASCADE, to='App_Model.geneticriskfactor')),
            ],
            options={
                'verbose_name': 'Disease >-< Genetic Risk Factor (GRF)',
                'verbose_name_plural': 'Diseases >-< Genetic Risk Factors (GRFs)',
                'db_table': 'Disease_GRF',
                'unique_together': {('disease_id', 'grf_id')},
            },
        ),
        migrations.AddField(
            model_name='disease',
            name='grfs',
            field=models.ManyToManyField(related_name='diseases', through='App_Model.DiseaseGRF', to='App_Model.geneticriskfactor'),
        ),
    ]
